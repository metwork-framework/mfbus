# General Configuration
daemon off;
worker_processes {{MFBUS_NGINX_WORKERS}};
{% if MFLOG_MINIMAL_LEVEL == "DEBUG" %}
error_log stderr debug;
{% else %}
error_log stderr error;
{% endif %}
pid        {{MFMODULE_RUNTIME_HOME}}/var/nginx.pid;

# Main Loop Configuration
events {
    worker_connections  10000;
}

# HTTP Configuration
http {

    include       mime.types;
    default_type  text/plain;
    # FIXME: ugly hack with ~~~1 and ~~~~2 to circumvent nginxfmt problem with JSON
    log_format main '~~~1 "@timestamp": "$time_iso8601", "from": "$remote_addr", "method": "$request_method", "uri": "$request_uri", "duration": $request_time, "status": $status, "request_length": $request_length, "reply_length": $bytes_sent ~~~2';
    access_log /dev/stdout main;
    {% if MFBUS_NGINX_LOGGING == "1" %}
        {% if MFBUS_ADMIN_HOSTNAME != "null" %}
            {% if MFBUS_ADMIN_SEND_NGINX_LOGS == "1" %}
                access_log syslog:server=127.0.0.1:{{MFBUS_JSONSYSLOG2ELASTICSEARCH_NGINXLOG_PORT}} main;
            {% endif %}
        {% endif %}
    {% else %}
        access_log off;
    {% endif %}
    client_body_temp_path {{MFBUS_NGINX_CLIENTBODY_TEMP_PATH}};
    client_max_body_size {{MFBUS_NGINX_UPLOAD_MAX_BODY_SIZE}}m;

    server {

        listen unix:{{MFMODULE_RUNTIME_HOME}}/var/nginx.socket backlog=40000;
        {% if MFBUS_NGINX_PORT != "0" %}
        listen {{MFBUS_NGINX_PORT}} backlog=40000;
        {% endif %}

        location ~ ^/status$ {
            stub_status on;
            access_log off;
        }

        # Monitoring service to avoid nginx worker zombies
        # FIXME: rename this in __uuidÂ²
        location = /uuid {
            allow 127.0.0.1/32;
            deny all;
            echo "{{UUID}}";
            access_log off;
            set $plugin "#monitoring#";
        }
	
    }

}
